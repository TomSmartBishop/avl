### General AVL helper functions

//% from 'sequence.jin' import seq, seqRnd with context
//% from 'flow.jin' import loop_ with context

### Splits a function body into header, inline and test code
//% macro func(list_supportedDims, desc)
//%   set currentDimMatches = (list_supportedDims|join).find(dim|string) != -1
//%   set content = caller()
//%   set ident = content|length - content.lstrip()|length
//%   if filetype=='h' and currentDimMatches
$'\t'*ident + desc@
$content.split('\n')|first@;
$'\t'*ident@
//%  elif filetype=='inl' and currentDimMatches
$'\t'*ident + desc@
$(content.split('test_case')|first)@
//%  elif filetype=='test' and (currentDimMatches or list_supportedDims == [0])
$'\t'*ident + 'SECTION( "' + desc.lstrip('/').strip(' ') + '" )'@
$(content.split('test_case')|last).rstrip('\t').strip('\n')@
$'\t'*ident@
//%  endif
//% endmacro

### Section Start
//% macro section(desc)
//%   if filetype=='test'
TEST_CASE( "$desc@.strip(' ')", "[$test_vecDef@($dim@)]" )
$'{'@
//%-  else
$'\t/// \defgroup ' + desc +'\n\t/// \\{'@
//%-  endif
//%-endmacro

### Section End
//% macro endSection()
//%   if filetype=='test'
$'}'@
//%   else
$'\t/// \\}'@
//%-  endif
//%-endmacro
